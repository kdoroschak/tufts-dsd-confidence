#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

import re
from re import *

# Defaults for now (because I'm lazy)
filename = "biogrid_mitab.mitab"
outfilename = "biogrid_ppi_nom.pub"
header = 1

limit = eval(raw_input("Limit: "))

# Try to open files
try:
    infile = open(filename)
except:
    print "Couldn't open file", filename
    exit()

try:
    outfile = open(outfilename, 'w')
except:
    print "Couldn't open file", outfilename
    exit()

# Set up regular expression
#   (3 letters, 3 numbers, 1 letter, sometimes -letter)
desired = re.compile('[A-Z][A-Z][A-Z][0-9][0-9][0-9][A-Z]-?[A-Z]?')

linecount = 0
failCount = 0
strangeCount = 0
maximum = 0

allNames = []
nameRef = {}

# Look through file, line by line.
for line in infile:

    Afound = False
    Bfound = False

    linecount += 1
    if (limit != 0) and (linecount > limit):
        break

    # Skip header
    if header > 0:
        header -= 1
        continue

    # Split columns
    cols = line.split('\t')

    # Separate columns into A and B name possibilities.
    Alist = '\t'.join([cols[0], cols[2], cols[4]])
    Blist = '\t'.join([cols[1], cols[3], cols[5]])

    # Extract publication
    pub = cols[8]
    pub += '\n'
    
    # Check A against desired RE
    matchA = desired.search(Alist)
    if matchA is not None:
        Afound = True
        nameA = matchA.group()

    
    # Check B against desired RE
    matchB = desired.search(Blist)
    if matchB is not None:
        Bfound = True
        nameB = matchB.group()

    
    # Print names and publication to outfile if
    # they both fit the right name format.
    if matchA and matchB:
        names = [nameA, nameB]
        names.sort()
        textNames = '\t'.join(names)
        newLine = '\t'.join([textNames, pub])
        outfile.write(newLine)
    
    # Don't put them in the file if they have wrong taxid
    elif cols[9].split(':')[1] != "559292":
        failCount += 1
    elif cols[10].split(':')[1] != "559292":
        failCount += 1
    
    # If they have wrong names but right taxid, put them in.
    # Count these ("strangeCount")
    #else:
        #strangeCount += 1
        #nameA = cols[2].split('|')[0].split(':')[1]
        #nameA = nameA.replace('"', '')
        #nameB = cols[3].split('|')[0].split(':')[1]
        #nameB = nameB.replace('"', '')
        #names = [nameA, nameB]
        #names.sort()
        #textNames = '\t'.join(names)
        #newLine = '\t'.join([textNames, pub])
        #outfile.write(newLine)

infile.close()
outfile.close()
#print "Failed:", failCount
#print "Strange:", strangeCount
